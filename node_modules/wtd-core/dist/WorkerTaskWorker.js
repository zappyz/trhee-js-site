export var WorkerTaskCommandRequest;
(function (WorkerTaskCommandRequest) {
    WorkerTaskCommandRequest["INIT"] = "init";
    WorkerTaskCommandRequest["INIT_CHANNEL"] = "initChannel";
    WorkerTaskCommandRequest["INTERMEDIATE"] = "intermediate";
    WorkerTaskCommandRequest["EXECUTE"] = "execute";
    WorkerTaskCommandRequest["INTERCOM_INIT"] = "interComInit";
    WorkerTaskCommandRequest["INTERCOM_INTERMEDIATE"] = "interComIntermediate";
    WorkerTaskCommandRequest["INTERCOM_EXECUTE"] = "interComExecute";
})(WorkerTaskCommandRequest || (WorkerTaskCommandRequest = {}));
export var WorkerTaskCommandResponse;
(function (WorkerTaskCommandResponse) {
    WorkerTaskCommandResponse["INIT_COMPLETE"] = "initComplete";
    WorkerTaskCommandResponse["INIT_CHANNEL_COMPLETE"] = "initChannelComplete";
    WorkerTaskCommandResponse["INTERMEDIATE_CONFIRM"] = "intermediateConfirm";
    WorkerTaskCommandResponse["EXECUTE_COMPLETE"] = "executeComplete";
    WorkerTaskCommandResponse["INTERCOM_INIT_COMPLETE"] = "interComInitComplete";
    WorkerTaskCommandResponse["INTERCOM_INTERMEDIATE_CONFIRM"] = "interComIntermediateConfirm";
    WorkerTaskCommandResponse["INTERCOM_EXECUTE_COMPLETE"] = "interComExecuteComplete";
})(WorkerTaskCommandResponse || (WorkerTaskCommandResponse = {}));
export class InterComPortHandler {
    ports = new Map();
    registerPort(name, payload, onmessage) {
        const port = payload ? payload.message.raw.port : undefined;
        if (!port) {
            throw new Error(`${payload?.message ?? 'undefined'} is not a RawPayload. Unable to extract a port.`);
        }
        this.ports.set(name, port);
        port.onmessage = onmessage;
    }
    postMessageOnPort(target, message, options) {
        this.ports.get(target)?.postMessage(message, options);
    }
}
export const comRouting = (workerImpl, message) => {
    const wtm = message.data;
    if (wtm && wtm.cmd) {
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        const obj = workerImpl;
        const funcName = wtm.cmd ?? 'unknown';
        if (typeof obj[funcName] === 'function') {
            obj[funcName](wtm);
        }
        else {
            console.warn(`No function "${funcName}" found on workerImpl.`);
        }
    }
    else {
        console.error(`Received: unknown message: ${wtm}`);
    }
};
//# sourceMappingURL=WorkerTaskWorker.js.map