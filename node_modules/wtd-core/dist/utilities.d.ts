import { AssociatedArrayType } from './Payload.js';
import { WorkerTask } from './WorkerTask.js';
import { WorkerTaskMessage } from './WorkerTaskMessage.js';
export declare const fillTransferables: (buffers: IterableIterator<ArrayBufferLike>, transferables: Transferable[], cloneBuffers: boolean) => void;
/**
 * Applies values from parameter object via set functions or via direct assignment.
 *
 * @param {object} objToAlter The objToAlter instance
 * @param {AssociatedArrayType} params The parameter object
 * @param {boolean} forceCreation Force the creation of a property
 */
export declare const applyProperties: (objToAlter: any, params?: AssociatedArrayType<unknown | string | object>, forceCreation?: boolean) => void;
export declare const createWorkerBlob: (code: string[]) => string;
export declare const initChannel: (workerOne: WorkerTask, workerTwo: WorkerTask) => Promise<WorkerTaskMessage[]>;
//# sourceMappingURL=utilities.d.ts.map