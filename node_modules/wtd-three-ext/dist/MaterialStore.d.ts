import { Material } from 'three';
export type AssociatedMaterialArrayType = {
    [key: string]: Material;
};
/**
 * Helper class around an object storing materials by name.
 * Optionally, create and store default materials.
 */
export declare class MaterialStore {
    private materials;
    /**
     * Creates a new {@link MaterialStore}.
     * @param {boolean} createDefaultMaterials
     */
    constructor(createDefaultMaterials: boolean);
    /**
     * Set materials loaded by any supplier of an Array of {@link Material}.
     *
     * @param {Map<string, Material>} newMaterials Object with named {@link Material}
     * @param {boolean} forceOverrideExisting boolean Override existing material
     */
    addMaterials(newMaterials: Map<string, Material>, forceOverrideExisting: boolean): void;
    addMaterialsFromObject(newMaterials: AssociatedMaterialArrayType, forceOverrideExisting: boolean): void;
    getMaterials(): Map<string, Material>;
    getMaterial(materialName: string): Material | undefined;
    clearMaterials(): void;
}
//# sourceMappingURL=MaterialStore.d.ts.map